- name: run drone server
  docker_container:
    name: drone-server
    image: "drone/drone:{{ drone_version }}"
    state: started
    restart_policy: always
    ports:
      - "8000:80"
      - "9000:443"
    volumes:
      - /drone:/var/lib/drone/
      - /var/run/docker.sock:/var/run/docker.sock
    env:
      DRONE_COOKIE_SECRET: "{{ drone_cookie_secret }}"
      DRONE_COOKIE_TIMEOUT: "{{ drone_cookie_timeout }}"

      DRONE_DATABASE_DATASOURCE: >-
        postgres://{{ drone_postgress_user }}:{{ drone_postgress_password }}@
        postgres:5432/{{ drone_postgress_db }}?sslmode=disable
      DRONE_DATABASE_DRIVER: postgres
      DRONE_DATABASE_SECRET: "{{ drone_database_secret }}"

      DRONE_GITHUB_CLIENT_ID: "{{ drone_github_client_id }}"
      DRONE_GITHUB_CLIENT_SECRET: "{{ drone_github_client_secret }}"
      DRONE_GITHUB_SERVER: "{{ drone_github_server }}"
      DRONE_GITHUB_SKIP_VERIFY: "true"

      DRONE_LOGS_DEBUG: "{{ drone_logs_debug }}"
      DRONE_LOGS_TRACE: "{{ drone_logs_trace }}"

      DRONE_AGENTS_ENABLED: "true"
      DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"

      DRONE_SERVER_HOST: "{{ drone_server_host }}"
      DRONE_SERVER_PROTO: "{{ drone_server_proto }}"

      DRONE_TLS_AUTOCERT: "{{ drone_tls_autocert }}"

      DRONE_USER_CREATE: "{{ drone_user_create }}"
      DRONE_USER_FILTER: "{{ drone_user_filter }}"
    networks:
      - name: "{{ drone_network_name }}"
  tags:
    - drone
    - server
  when:
    - ansible_drone_deploy_server|bool

- name: run drone agent
  docker_container:
    name: "agent-{{ item.name }}"
    image: "drone/agent:{{ drone_version }}"
    privileged: yes
    state: started
    restart_policy: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env:
      DRONE_LOGS_DEBUG: "{{ drone_logs_debug }}"
      DRONE_LOGS_TRACE: "{{ drone_logs_trace }}"
      DRONE_RPC_SECRET: "{{ drone_rpc_secret }}"
      DRONE_RPC_SERVER: "{{ drone_rpc_server }}"
      DRONE_RUNNER_CAPACITY: "{{ drone_runner_capacity }}"
      DRONE_RUNNER_NAME: "{{ item.name }}"
    networks:
      - name: "{{ drone_network_name }}"
  with_items: "{{ drone_runners }}"
  tags:
    - drone
    - agent
  when:
    - ansible_drone_deploy_agents|bool
