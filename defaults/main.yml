drone_network_name: drone_isolated_network

# Version of Drone CI, see other versions here: https://hub.docker.com/r/drone/drone/tags/
drone_version: latest

# List of users with admin access to the drone, read https://docs.drone.io/administration/user/admins/
drone_admins: ""

# Optional comma-separated list of accounts. Registration is limited to users included in this list
# read more: https://docs.drone.io/reference/server/drone-user-filter/
drone_users: ""

# Name of the docker agent container, you can add more than one agent
drone_agents: [{name: "Nancy"}]

# Drone secret key, used for private communication between agent and web UI
# more info: https://docs.drone.io/reference/server/drone-rpc-secret/
drone_secret: hTirsXmrY4YsyK79ELgB

# Github oauth application client identifier, more info https://docs.drone.io/installation/github/single-machine/
drone_github_client_id:
# Github oauth application client secret, more info https://docs.drone.io/installation/github/single-machine/
drone_github_secret:
# Boolean value configures Drone to authenticate when cloning public repositories, more info https://docs.drone.io/installation/github/single-machine/
drone_git_always_auth: false
# A string containing your GitHub server address
drone_github_server: https://github.com
# An integer defining the maximum number of pipelines the agent should execute concurrently
drone_runner_capacity: 2
# A string containing your Drone server protocol scheme. This value should be set to http or https.
drone_server_proto: https
# A string containing your Drone server hostname or IP address.
drone_server_host: 
# An boolean indicating debug level logs should be use for automatic SSL certification generation and configuration
drone_tls_autocert: false

# Drone supports aesgcm encryption of secrets stored in the database.
# details https://docs.drone.io/administration/server/database/
drone_database_secret:

# Version of Postgres, see other versions here: https://hub.docker.com/_/postgres?tab=tags
drone_postgres_version: latest
# Use remote postgres or install docker container
use_remote_drone_postgres: false
# Postgres host
drone_postgres_host: localhost
# Postgres port
drone_postgres_port: 5432

# A password to postgress db used by drone
drone_postgres_password: droneRocks23@p
# A username to postgress db used by drone, read more: https://docs.drone.io/administration/server/database/
drone_postgres_user: drone
# A name of to postgress db used by drone, read more: https://docs.drone.io/administration/server/database/
drone_postgres_db: drone
# a directory on a host machine, where postgresql data stored
drone_postgres_data_dir: /drone-postgres-data
